var lift = function (obj) {
    if (obj instanceof Array)
        return new ArrayOps(obj);
    if (typeof obj === 'string')
        return new StringOps(obj);
    if (typeof obj === 'number')
        return new NumberOps(obj);
    if (obj === true || obj === false)
        return new BoolOps(obj);
    return new ObjectOps(obj);
};
export default lift;
export function getValue(input) {
    return input && input['_isLiftWrapper']
        ? input.value()
        : input;
}
function makeOps() {
    var Ops = (function () {
        function Ops(_value) {
            this._value = _value;
            this._isLiftWrapper = true;
        }
        Ops.prototype.value = function () { return this._value; };
        return Ops;
    }());
    return Ops;
}
export var ArrayOps = makeOps();
export var ObjectOps = makeOps();
export var NumberOps = makeOps();
export var StringOps = makeOps();
export var BoolOps = makeOps();
