import { ArrayOps, ObjectOps, NumberOps, StringOps, BoolOps, Wrapper } from './lift';
declare module '../wrapper' {
    interface ArrayOps<A> {
        transform: typeof transform;
    }
}
declare module '../wrapper' {
    interface ObjectOps<A> {
        transform: typeof transform;
    }
}
declare module '../wrapper' {
    interface NumberOps {
        transform: typeof transform;
    }
}
declare module '../wrapper' {
    interface StringOps {
        transform: typeof transform;
    }
}
declare module '../wrapper' {
    interface BoolOps {
        transform: typeof transform;
    }
}
export declare function transform<A>(this: Wrapper<A>, func: (source: A) => number): NumberOps;
export declare function transform<A>(this: Wrapper<A>, func: (source: A) => string): StringOps;
export declare function transform<A>(this: Wrapper<A>, func: (source: A) => boolean): BoolOps;
export declare function transform<A, B>(this: Wrapper<A>, func: (source: A) => B[]): ArrayOps<B>;
export declare function transform<A, B>(this: Wrapper<A>, func: (source: A) => B): ObjectOps<B>;
